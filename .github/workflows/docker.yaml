name: Docker
on:
  push: {}
  schedule:
    - cron: "16 0 * * 0"

jobs:
  release:
    name: Release images
    strategy:
      matrix:
        tag: [devcontainer]
        include:
          - tag: devcontainer
            target: devcontainer
            # TODO(jacob): configure cross-compilation
            # qemu_platforms: amd64,arm64
            # docker_platforms: linux/amd64,linux/arm64
            rust: latest,1.58,1.57,1.56
            username: bitski

          - tag: |
              rust
              rust-1.58
            target: rust
            rust: "1.58"

          - tag: rust-1.57
            target: rust
            rust: "1.57"

          - tag: rust-1.56
            target: rust
            rust: "1.56"

    runs-on: ubuntu-latest
    env:
      # Use Docker buildx
      DOCKER_BUILDKIT: "1"
      # github.repository as <account>/<repo>
      IMAGE_NAME: ${{ github.repository }}
      # Use docker.io for Docker Hub if empty
      REGISTRY: ghcr.io

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up QEMU
        if: matrix.qemu_platforms != null
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.qemu_platforms }}

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf
        with:
          driver-opts: network=host

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: ${{ matrix.tag }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into Docker registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build and push Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        env:
          SCOPE: ${{ runner.os }}-${{ runner.arch }}-docker
        with:
          context: .
          target: ${{ matrix.target }}
          build-args: |
            USERNAME=${{ matrix.username }}
            RUST_VERSION=${{ matrix.rust }}

            AWS_ACCESS_KEY_ID=${{ secrets.SCCACHE_AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY=${{ secrets.SCCACHE_AWS_SECRET_ACCESS_KEY }}
            SCCACHE_BUCKET=${{ secrets.SCCACHE_BUCKET }}
            SCCACHE_S3_USE_SSL=true
            RUSTC_WRAPPER=sccache

          cache-from: type=gha,scope=${{ env.SCOPE }}
          cache-to: type=gha,scope=${{ env.SCOPE }},mode=max
          platforms: ${{ matrix.docker_platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
