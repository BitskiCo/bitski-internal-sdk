name: Release

on:
  pull_request:
    paths:
      - .github/workflows/release.yaml
  workflow_call:
    inputs:
      registry:
        description: "Docker registry"
        default: ghcr.io
        type: string
      registry_username:
        description: "Docker registry username"
        default: ${{ github.actor }}
        type: string
      image_name:
        description: "Docker image name"
        default: ${{ github.repository }}
        type: string
      source_tag:
        description: "The source image tag to release"
        default: main
        type: string
      target_tag:
        description: "The target image tag to release"
        default: latest
        type: string
      rollback_tag:
        description: "The rollback image tag"
        default: rollback
        type: string
    secrets:
      registry_password:
        description: "Docker registry password, defaults to GITHUB_TOKEN"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    env:
      # Use docker.io for Docker Hub if empty
      REGISTRY: ${{ inputs.registry || 'ghcr.io' }}
    steps:
      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ inputs.registry_username || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || secrets.GITHUB_TOKEN }}

      - name: Configure image names
        env:
          # github.repository as <account>/<repo>
          IMAGE_NAME: ${{ inputs.image_name || github.repository }}
          # Image tags
          SOURCE_TAG: ${{ inputs.source_tag || 'devcontainer' }}
          TARGET_TAG: ${{ inputs.target_tag || 'latest' }}
          ROLLBACK_TAG: ${{ inputs.rollback_tag || '' }}
        run: |
          IMAGE_NAME="${REGISTRY,,}/${IMAGE_NAME,,}"
          echo "SOURCE_IMAGE=$IMAGE_NAME:$SOURCE_TAG" | tee -a $GITHUB_ENV
          echo "TARGET_IMAGE=$IMAGE_NAME:$TARGET_TAG" | tee -a $GITHUB_ENV

          if [[ -n "$ROLLBACK_TAG" ]]; then
            echo "ROLLBACK_IMAGE=$IMAGE_NAME:$ROLLBACK_TAG" | tee -a $GITHUB_ENV
          fi

      - name: Tag target and rollback images
        run: |
          set -o xtrace

          if docker pull "$SOURCE_IMAGE"; then
            SOURCE_ID=`docker inspect --format '{{ .Id }}' "$SOURCE_IMAGE"`
          else
            >&2 echo 'No source image found'
            exit 1
          fi

          if docker pull "$TARGET_IMAGE"; then
            TARGET_ID=`docker inspect --format '{{ .Id }}' "$TARGET_IMAGE"`
            if [[ "$TARGET_ID" == "$SOURCE_ID" ]]; then
              echo 'Nothing to do: target is the same as source'
              exit
            fi
            if [[ -n "$ROLLBACK_IMAGE" ]]; then
              docker tag "$TARGET_IMAGE" "$ROLLBACK_IMAGE"
            fi
          else
            echo "ROLLBACK_IMAGE=" | tee -a $GITHUB_ENV
          fi

          docker tag "$SOURCE_IMAGE" "$TARGET_IMAGE"

      - name: Push targe and rollback images
        if: github.event_name != 'pull_request'
        run: |
          set -o xtrace

          if [[ -n "$ROLLBACK_IMAGE" ]]; then
            docker push "$ROLLBACK_IMAGE"
          fi

          docker push "$TARGET_IMAGE"
