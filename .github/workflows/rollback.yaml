name: Rollback

on:
  workflow_call:
    inputs:
      registry:
        description: "Docker registry"
        type: string
        default: ghcr.io
        required: false
      registry_username:
        description: "Docker registry username"
        type: string
        default: ${{ github.actor }}
        required: false
      image_name:
        description: "Docker image name"
        type: string
        # github.repository as <account>/<repo>
        default: ${{ github.repository }}
        required: false
      target_tag:
        description: "The target image tag to rollback"
        type: string
        default: latest
        required: false
      rollback_tag:
        description: "The rollback image tag"
        type: string
        default: rollback
        required: true
      release_workflow:
        description: "Release workflow in the same repo to disable"
        type: string
        default: Release
        required: false
    secrets:
      registry_password:
        description: "Docker registry password"
        required: true

jobs:
  rollback:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      packages: write
    steps:
      - name: Disable release workflow
        if: github.event_name != 'pull_request' && inputs.release_workflow
        uses: actions/github-script@v5
        env:
          RELEASE_WORKFLOW: ${{ inputs.release_workflow }}
        with:
          script: |
            const workflowName = process.env.RELEASE_WORKFLOW;
            const options = context.repo;

            let workflow;
            for await (const response of github.paginate.iterator(
              github.rest.actions.listRepoWorkflows,
              options
            )) {
              core.debug(`response = ${JSON.stringify(response, null, "  ")}`);
              let wflow =
                response.data &&
                response.data.find((it) => it.name === workflowName);
              if (wflow) {
                workflow = wflow;
                break;
              }
            }

            if (workflow == null) {
              core.setFailed(
                `Workflow ${JSON.stringify(workflowName)} not found`
              );
            } else if (workflow.state === "active") {
              options.workflow_id = workflow.id;
              await github.rest.actions.disableWorkflow(options);
            }

      # Login against a Docker registry
      # https://github.com/docker/login-action
      - name: Log into Docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry }}
          username: ${{ inputs.registry_username }}
          password: ${{ secrets.registry_password }}

      - name: Configure image names
        env:
          REGISTRY: ${{ inputs.registry }}
          IMAGE_NAME: ${{ inputs.image_name }}
          TARGET_TAG: ${{ inputs.target_tag }}
          ROLLBACK_TAG: ${{ inputs.rollback_tag }}
        run: |
          IMAGE_NAME="${REGISTRY,,}/${IMAGE_NAME,,}"
          echo "TARGET_IMAGE=$IMAGE_NAME:$TARGET_TAG" | tee -a $GITHUB_ENV
          echo "ROLLBACK_IMAGE=$IMAGE_NAME:$ROLLBACK_TAG" | tee -a $GITHUB_ENV

      - name: Tag target image
        run: |
          set -o xtrace

          docker pull "$ROLLBACK_IMAGE"
          docker tag "$ROLLBACK_IMAGE" "$TARGET_IMAGE"

      - name: Push target image
        if: github.event_name != 'pull_request'
        run: docker push "$TARGET_IMAGE"
